⁄
xC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Shared\Messages\CustomerOrders\CustomerOrdersNotFoundResponse.cs
	namespace 	
ShowRoom
 
. 
Shared 
. 
Messages "
." #
CustomerOrders# 1
;1 2
public 
	interface *
CustomerOrdersNotFoundResponse /
:0 1
CorrelatedBy 
< 
Guid 
> 
{ 
Guid 
CorrelationId	 
{ 
get 
; 
} 
}		 ‡
oC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Shared\Messages\CustomerOrders\CustomerOrdersRequest.cs
	namespace 	
ShowRoom
 
. 
Shared 
. 
Messages "
." #
CustomerOrders# 1
;1 2
public 
record !
CustomerOrdersRequest #
(# $
Guid$ (
CorrelationId) 6
,6 7
Guid8 <

CustomerId= G
)G H
:I J
CorrelatedBy 
< 
Guid 
> 
{ 
} ‚
pC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Shared\Messages\CustomerOrders\CustomerOrdersResponse.cs
	namespace 	
ShowRoom
 
. 
Shared 
. 
Messages "
." #
CustomerOrders# 1
;1 2
public 
	interface "
CustomerOrdersResponse '
:( )
CorrelatedBy 
< 
Guid 
> 
{ 
Order		 	
[			 

]		
 
Orders		 
{		 
get		 
;		 
}		 
}

 †
NC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Shared\Models\Order.cs
	namespace 	
ShowRoom
 
. 
Shared 
. 
Models  
;  !
public 
class 
Order 
{ 
public 

Guid 
Id 
{ 
get 
; 
set 
; 
}  
public		 

string		 
Item		 
{		 
get		 
;		 
set		 !
;		! "
}		# $
public 

double 
Quantity 
{ 
get  
;  !
set" %
;% &
}' (
public 

string 
Ean 
{ 
get 
; 
set  
;  !
}" #
public 

DateTime 
	CreatedOn 
{ 
get  #
;# $
set% (
;( )
}* +
} ‘
PC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Shared\Models\Product.cs
	namespace 	
ShowRoom
 
. 
Shared 
. 
Models  
;  !
public 
class 
Product 
{ 
public 

int 
Id 
{ 
get 
; 
set 
; 
} 
public 

string 
Wording 
{ 
get 
;  
set! $
;$ %
}& '
} Ø
UC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Shared\Models\ProductOrder.cs
	namespace 	
ShowRoom
 
. 
Shared 
. 
Models  
;  !
public 
class 
ProductOrder 
{ 
public 

Product 
Product 
{ 
get  
;  !
set" %
;% &
}' (
public 

double 
Amount 
{ 
get 
; 
set  #
;# $
}% &
public		 

int		 
Bargain		 
{		 
get		 
;		 
set		 !
;		! "
}		# $
public 

int 
Price 
{ 
get 
; 
set 
;  
}! "
public 

int 

FinalPrice 
{ 
get 
;  
set! $
;$ %
}& '
} œ	
NC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Shared\Shared\Error.cs
	namespace 	
ShowRoom
 
. 
Shared 
. 
Shared  
;  !
public 
record 
struct 
Error 
( 
string !
	ErrorName" +
,+ ,
string- 3
Message4 ;
); <
{ 
public 

static 
readonly 
Error  
None! %
=& '
new( +
(+ ,
string, 2
.2 3
Empty3 8
,8 9
string: @
.@ A
EmptyA F
)F G
;G H
public 

static 
readonly 
Error  
	NullValue! *
=+ ,
new- 0
(0 1
$str1 B
,B C
$strD i
)i j
;j k
public 

static 
implicit 
operator #
string$ *
(* +
Error+ 0
error1 6
)6 7
=>8 :
error; @
.@ A
	ErrorNameA J
;J K
}		 Á>
OC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Shared\Shared\Result.cs
	namespace 	
ShowRoom
 
. 
Shared 
. 
Shared  
;  !
public 
class 
Result 
{ 
	protected 
internal 
Result 
( 
bool "
	isSuccess# ,
,, -
Error. 3
error4 9
)9 :
{ 
if 

( 
	isSuccess 
&& 
error 
!= !
Error" '
.' (
None( ,
), -
{ 	
throw		 
new		 %
InvalidOperationException		 /
(		/ 0
)		0 1
;		1 2
}

 	
if 

( 
! 
	isSuccess 
&& 
error 
==  "
Error# (
.( )
None) -
)- .
{ 	
throw 
new %
InvalidOperationException /
(/ 0
)0 1
;1 2
} 	
	IsSuccess 
= 
	isSuccess 
; 
Error 
= 
error 
; 
Errors 
= 
new 
[ 
] 
{ 
error 
}  
;  !
} 
	protected 
internal 
Result 
( 
bool "
	isSuccess# ,
,, -
Error. 3
[3 4
]4 5
errors6 <
)< =
{ 
	IsSuccess 
= 
	isSuccess 
; 
Errors 
= 
errors 
; 
} 
public 

bool 
	IsSuccess 
{ 
get 
;  
}! "
public 

bool 
	IsFailure 
=> 
! 
	IsSuccess '
;' (
public   

Error   
Error   
{   
get   
;   
}   
public"" 

Error"" 
["" 
]"" 
Errors"" 
{"" 
get"" 
;""  
}""! "
public$$ 

static$$ 
Result$$ 
Success$$  
($$  !
)$$! "
=>$$# %
new$$& )
($$) *
true$$* .
,$$. /
Error$$0 5
.$$5 6
None$$6 :
)$$: ;
;$$; <
public&& 

static&& 
Result&& 
<&& 
TValue&& 
>&&  
Success&&! (
<&&( )
TValue&&) /
>&&/ 0
(&&0 1
TValue&&1 7
value&&8 =
)&&= >
=>&&? A
new'' 
('' 
value'' 
,'' 
true'' 
,'' 
Error'' 
.'' 
None'' #
)''# $
;''$ %
public)) 

static)) 
Result)) 
<)) 
TValue)) 
>))  
Failure))! (
<))( )
TValue))) /
>))/ 0
())0 1
TValue))1 7
value))8 =
,))= >
Error))? D
error))E J
)))J K
=>))L N
new** 
(** 
value** 
,** 
false** 
,** 
error** 
)**  
;**  !
public,, 

static,, 
Result,, 
Failure,,  
(,,  !
Error,,! &
error,,' ,
),,, -
=>,,. 0
new,,1 4
(,,4 5
false,,5 :
,,,: ;
error,,< A
),,A B
;,,B C
public.. 

static.. 
Result.. 
Failure..  
(..  !
Error..! &
[..& '
]..' (
errors..) /
)../ 0
=>..1 3
new..4 7
(..7 8
false..8 =
,..= >
errors..? E
)..E F
;..F G
public00 

static00 
Result00 
<00 
TValue00 
>00  
Failure00! (
<00( )
TValue00) /
>00/ 0
(000 1
Error001 6
error007 <
)00< =
=>00> @
new00A D
(00D E
default00E L
,00L M
false00N S
,00S T
error00U Z
)00Z [
;00[ \
public22 

static22 
Result22 
<22 
TValue22 
>22  
Failure22! (
<22( )
TValue22) /
>22/ 0
(220 1
Error221 6
[226 7
]227 8
errors229 ?
)22? @
=>22A C
new22D G
(22G H
default22H O
,22O P
false22Q V
,22V W
errors22X ^
)22^ _
;22_ `
public44 

static44 
Result44 
Create44 
(44  
bool44  $
	isSuccess44% .
,44. /
Error440 5
error446 ;
)44; <
=>44= ?
new44@ C
(44C D
	isSuccess44D M
,44M N
error44O T
)44T U
;44U V
public66 

static66 
Result66 
<66 
TValue66 
>66  
Create66! '
<66' (
TValue66( .
>66. /
(66/ 0
TValue660 6
?666 7
value668 =
)66= >
=>66? A
value77 
is77 
not77 
null77 
?77 
Success77 #
(77# $
value77$ )
)77) *
:77+ ,
Failure77- 4
<774 5
TValue775 ;
>77; <
(77< =
Error77= B
.77B C
	NullValue77C L
)77L M
;77M N
public99 

static99 
Result99 
<99 
TValue99 
>99  
Ensure99! '
<99' (
TValue99( .
>99. /
(99/ 0
TValue990 6
value997 <
,99< =
Func99> B
<99B C
TValue99C I
,99I J
bool99K O
>99O P
	predicate99Q Z
,99Z [
Error99\ a
error99b g
)99g h
{:: 
return;; 
	predicate;; 
(;; 
value;; 
);; 
?;;  !
Success<< 
(<< 
value<< 
)<< 
:<< 
Failure== 
<== 
TValue== 
>== 
(== 
error== !
)==! "
;==" #
}>> 
public@@ 

static@@ 
Result@@ 
<@@ 
TValue@@ 
>@@  
Combine@@! (
<@@( )
TValue@@) /
>@@/ 0
(@@0 1
params@@1 7
Result@@8 >
<@@> ?
TValue@@? E
>@@E F
[@@F G
]@@G H
results@@I P
)@@P Q
{AA 
ifBB 

(BB 
resultsBB 
.BB 
AnyBB 
(BB 
rBB 
=>BB 
rBB 
.BB 
	IsFailureBB (
)BB( )
)BB) *
{CC 	
returnDD 
FailureDD 
<DD 
TValueDD !
>DD! "
(DD" #
resultsEE 
.EE 

SelectManyEE "
(EE" #
rEE# $
=>EE% '
rEE( )
.EE) *
ErrorsEE* 0
)EE0 1
.EE1 2
DistinctEE2 :
(EE: ;
)EE; <
.EE< =
ToArrayEE= D
(EED E
)EEE F
)FF 
;FF 
}GG 	
returnII 
SuccessII 
(II 
resultsII 
[II 
$numII  
]II  !
.II! "
ValueII" '
)II' (
;II( )
}JJ 
}KK €
YC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Shared\Shared\ResultExtensions.cs
	namespace 	
ShowRoom
 
. 
Shared 
. 
Shared  
;  !
public 
static 
class 
ResultExtensions $
{ 
public 

static 
Result 
< 
T 
> 
Ensure "
<" #
T# $
>$ %
(% &
this 
Result 
< 
T 
> 
result 
, 
Func 
< 
T 
, 
bool 
> 
	predicate 
,  
Error 
error 
) 
{		 
if

 

(

 
result

 
.

 
	IsFailure

 
)

 
{ 	
return
 
result 
; 
} 
return 
	predicate 
( 
result 
.  
Value  %
)% &
?' (
result 
: 
Result 
. 
Failure 
< 
T 
> 
( 
error #
)# $
;$ %
} 
public 

static 
Result 
< 
TOut 
> 
Map "
<" #
TIn# &
,& '
TOut( ,
>, -
(- .
this 
Result 
< 
TIn 
> 
result 
,  
Func 
< 
TIn 
, 
TOut 
> 

mappinFunc "
) 	
{ 
return 
result 
. 
	IsSuccess 
?  !
Result 
. 
Success 
( 

mappinFunc %
(% &
result& ,
., -
Value- 2
)2 3
)3 4
:5 6
Result 
. 
Failure 
< 
TOut 
>  
(  !
result! '
.' (
Error( -
)- .
;. /
} 
} ì
PC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Shared\Shared\ResultT.cs
	namespace 	
ShowRoom
 
. 
Shared 
. 
Shared  
{ 
public 

class 
Result 
< 
TValue 
> 
:  !
Result" (
{ 
private 
readonly 
TValue 
?  
_value! '
;' (
	protected 
internal 
Result !
(! "
TValue" (
?( )
value* /
,/ 0
bool1 5
	isSuccess6 ?
,? @
ErrorA F
errorG L
)L M
: 
base 
( 
	isSuccess 
, 
error #
)# $
=>% '
_value( .
=/ 0
value1 6
;6 7
	protected

 
internal

 
Result

 !
(

! "
TValue

" (
?

( )
value

* /
,

/ 0
bool

1 5
	isSuccess

6 ?
,

? @
Error

A F
[

F G
]

G H
errors

I O
)

O P
: 
base 
( 
	isSuccess 
, 
errors $
)$ %
=>& (
_value) /
=0 1
value2 7
;7 8
public 
TValue 
? 
Value 
=> 
_value  &
;& '
public 
static 
implicit 
operator '
Result( .
<. /
TValue/ 5
>5 6
(6 7
TValue7 =
?= >
value? D
)D E
=>F H
CreateI O
(O P
valueP U
)U V
;V W
public 
static 
implicit 
operator '
Result( .
<. /
TValue/ 5
>5 6
(6 7
Error7 <
error= B
)B C
=>D F
FailureG N
<N O
TValueO U
>U V
(V W
errorW \
)\ ]
;] ^
public 
static 
implicit 
operator '
Result( .
<. /
TValue/ 5
>5 6
(6 7
Error7 <
[< =
]= >
errors? E
)E F
=>G I
FailureJ Q
<Q R
TValueR X
>X Y
(Y Z
errorsZ `
)` a
;a b
} 
} 