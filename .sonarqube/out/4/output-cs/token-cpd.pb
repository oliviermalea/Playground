Ù,
cC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Order.WebApi\Features\Order\OrderFactory.cs
	namespace 	
ShowRoom
 
. 
Order 
. 
WebApi 
.  
Features  (
.( )
Order) .
{ 
internal 
static 
class 
OrderFactory &
{ 
internal 
static 
async 
Task "
<" #
Order# (
>( )
GenerateOrderAsync* <
(< =
CancellationToken= N
cancellationTokenO `
=a b
defaultc j
)j k
{		 	
var

 
fruit

 
=

 
new

 
[

 
]

 
{

 
$str

  '
,

' (
$str

) 1
,

1 2
$str

3 ;
,

; <
$str

= I
,

I J
$str

K Q
}

R S
;

S T
return 
await 
Task 
. 
Run !
(! "
(" #
)# $
=>% '
{ 
var 
item 
= 
new 
Faker $
<$ %
Order% *
>* +
(+ ,
), -
. 
CustomInstantiator #
(# $
f$ %
=>& (
new) ,
Order- 2
(2 3
)3 4
)4 5
. 
RuleFor 
( 
u 
=> 
u 
.  
Id  "
," #
Guid$ (
.( )
NewGuid) 0
(0 1
)1 2
)2 3
. 
RuleFor 
( 
o 
=> 
o 
.  
Item  $
,$ %
f& '
=>( *
f+ ,
., -

PickRandom- 7
(7 8
fruit8 =
)= >
)> ?
. 
RuleFor 
( 
o 
=> 
o 
.  
Quantity  (
,( )
f* +
=>, .
f/ 0
.0 1
Random1 7
.7 8
Number8 >
(> ?
$num? @
,@ A
$numB D
)D E
)E F
;F G
return 
item 
. 
Generate $
($ %
)% &
;& '
} 
, 
cancellationToken 
) 
; 
} 	
internal 
static 
Order 
GenerateOrder +
(+ ,
), -
{ 	
var 
products 
= 
new 
Bogus $
.$ %
DataSets% -
.- .
Commerce. 6
(6 7
)7 8
;8 9
var 
item 
= 
new 
Faker  
<  !
Order! &
>& '
(' (
)( )
. 
CustomInstantiator #
(# $
f$ %
=>& (
new) ,
Order- 2
(2 3
)3 4
)4 5
.   
RuleFor   
(   
u   
=>   
u   
.    
Id    "
,  " #
Guid  $ (
.  ( )
NewGuid  ) 0
(  0 1
)  1 2
)  2 3
.!! 
RuleFor!! 
(!! 
o!! 
=>!! 
o!! 
.!!  
Item!!  $
,!!$ %
products!!& .
.!!. /
ProductName!!/ :
)!!: ;
."" 
RuleFor"" 
("" 
o"" 
=>"" 
o"" 
.""  
Ean""  #
,""# $
products""% -
.""- .
Ean13"". 3
)""3 4
.## 
RuleFor## 
(## 
o## 
=>## 
o## 
.##  
Quantity##  (
,##( )
f##* +
=>##, .
f##/ 0
.##0 1
Random##1 7
.##7 8
Number##8 >
(##> ?
$num##? @
,##@ A
$num##B D
)##D E
)##E F
.$$ 
RuleFor$$ 
($$ 
o$$ 
=>$$ 
o$$ 
.$$  
	CreatedOn$$  )
,$$) *
f$$+ ,
=>$$- /
f$$0 1
.$$1 2
Date$$2 6
.$$6 7
RecentOffset$$7 C
($$C D
$num$$D F
)$$F G
.$$G H
LocalDateTime$$H U
)$$U V
;$$V W
return&& 
item&& 
.&& 
Generate&&  
(&&  !
)&&! "
;&&" #
}'' 	
internal)) 
static)) 
List)) 
<)) 
Order)) "
>))" #
GenerateManyOrders))$ 6
())6 7
)))7 8
{** 	
var++ 
qty++ 
=++ 
new++ 
Random++  
(++  !
)++! "
.++" #
Next++# '
(++' (
$num++( )
,++) *
$num+++ -
)++- .
;++. /
return,, 

Enumerable,, 
.,, 
Range,, #
(,,# $
$num,,$ %
,,,% &
qty,,' *
),,* +
.,,+ ,
Select,,, 2
(,,2 3
c,,3 4
=>,,5 7
GenerateOrder,,8 E
(,,E F
),,F G
),,G H
.,,H I
ToList,,I O
(,,O P
),,P Q
;,,Q R
}-- 	
}.. 
}// £
eC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Order.WebApi\Infrastructure\ActivityHelper.cs
	namespace 	
ShowRoom
 
. 
Order 
. 
WebApi 
.  
Infrastructure  .
;. /
public 
static 
class 
ActivityHelper "
{ 
public 

readonly 
static 
ActivitySource )
Source* 0
=1 2
new3 6
ActivitySource7 E
(E F
InstrumentationF U
.U V
ActivitySourceNameV h
)h i
;i j
}		 ö
qC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Order.WebApi\Infrastructure\Behaviour\LoggingBehaviour.cs
	namespace 	
ShowRoom
 
. 
Order 
. 
WebApi 
.  
Infrastructure  .
.. /
	Behaviour/ 8
;8 9
public 
class 
LoggingBehaviour 
< 
TRequest &
,& '
	TResponse( 1
>1 2
:3 4
IPipelineBehavior5 F
<F G
TRequestG O
,O P
	TResponseQ Z
>Z [
{ 
private 
readonly 
ILogger 
< 
LoggingBehaviour -
<- .
TRequest. 6
,6 7
	TResponse8 A
>A B
>B C
_loggerD K
;K L
public

 

LoggingBehaviour

 
(

 
ILogger

 #
<

# $
LoggingBehaviour

$ 4
<

4 5
TRequest

5 =
,

= >
	TResponse

? H
>

H I
>

I J
logger

K Q
)

Q R
{ 
_logger 
= 
logger 
; 
} 
public 

async 
Task 
< 
	TResponse 
>  
Handle! '
(' (
TRequest( 0
request1 8
,8 9"
RequestHandlerDelegate: P
<P Q
	TResponseQ Z
>Z [
next\ `
,` a
CancellationTokenb s
cancellationToken	t Ö
)
Ö Ü
{ 
_logger 
. 
LogInformation 
( 
$str 7
,7 8
typeof9 ?
(? @
TRequest@ H
)H I
.I J
NameJ N
)N O
;O P
Type 
myType 
= 
request 
. 
GetType %
(% &
)& '
;' (
IList 
< 
PropertyInfo 
> 
props !
=" #
new$ '
List( ,
<, -
PropertyInfo- 9
>9 :
(: ;
myType; A
.A B
GetPropertiesB O
(O P
)P Q
)Q R
;R S
foreach 
( 
PropertyInfo 
prop "
in# %
props& +
)+ ,
{ 	
object 
	propValue 
= 
prop #
.# $
GetValue$ ,
(, -
request- 4
,4 5
null6 :
): ;
;; <
_logger 
. 
LogInformation "
(" #
$str# :
,: ;
prop< @
.@ A
NameA E
,E F
	propValueG P
)P Q
;Q R
} 	
var 
response 
= 
await 
next !
(! "
)" #
;# $
_logger 
. 
LogInformation 
( 
$str 7
,7 8
typeof9 ?
(? @
	TResponse@ I
)I J
.J K
NameK O
)O P
;P Q
return 
response 
; 
} 
}   Ñ-
wC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Order.WebApi\Infrastructure\Behaviour\ObservabilityBehaviour.cs
	namespace 	
ShowRoom
 
. 
Order 
. 
WebApi 
.  
Infrastructure  .
.. /
	Behaviour/ 8
;8 9
public		 
class		 "
ObservabilityBehaviour		 #
<		# $
TRequest		$ ,
,		, -
	TResponse		. 7
>		7 8
:		9 :
IPipelineBehavior		; L
<		L M
TRequest		M U
,		U V
	TResponse		W `
>		` a
{

 
public 

async 
Task 
< 
	TResponse 
>  
Handle! '
(' (
TRequest( 0
request1 8
,8 9"
RequestHandlerDelegate: P
<P Q
	TResponseQ Z
>Z [
next\ `
,` a
CancellationTokenb s
cancellationToken	t Ö
)
Ö Ü
{ 
var 
activityQuery 
= 
typeof "
(" #
TRequest# +
)+ ,
., -
Name- 1
;1 2
var 
meter 
= 
new 
Meter 
( 
Instrumentation -
.- .
	MeterName. 7
)7 8
;8 9
var 
counter 
= 
meter 
. 
CreateCounter )
<) *
int* -
>- .
(. /
$str/ A
)A B
;B C
var 
	histogram 
= 
meter 
. 
CreateHistogram -
<- .
float. 3
>3 4
(4 5
$str5 G
,G H
unitI M
:M N
$strO S
)S T
;T U
meter 
. !
CreateObservableGauge #
(# $
$str$ 1
,1 2
(3 4
)4 5
=>6 8
new9 <
[< =
]= >
{? @
newA D
MeasurementE P
<P Q
intQ T
>T U
(U V

ThreadPoolV `
.` a
ThreadCounta l
)l m
}n o
)o p
;p q
counter 
. 
Add 
( 
$num 
, 
KeyValuePair #
.# $
Create$ *
<* +
string+ 1
,1 2
object3 9
?9 :
>: ;
(; <
$str< B
,B C
typeofD J
(J K
TRequestK S
)S T
.T U
NameU Y
)Y Z
)Z [
;[ \
var 
	stopwatch 
= 
	Stopwatch !
.! "
StartNew" *
(* +
)+ ,
;, -
using 
( 
Activity 
activity  
=! "
ActivityHelper# 1
.1 2
Source2 8
.8 9
StartActivity9 F
(F G
activityQueryG T
,T U
ActivityKindV b
.b c
Serverc i
)i j
)j k
{ 	
activity 
? 
. 
AddTag 
( 
$str $
,$ %
typeof& ,
(, -
TRequest- 5
)5 6
.6 7
Name7 ;
); <
;< =
activity 
? 
. 

AddBaggage  
(  !
$str! *
,* +
typeof, 2
(2 3
TRequest3 ;
); <
.< =
Name= A
)A B
;B C
Type 
myType 
= 
request !
.! "
GetType" )
() *
)* +
;+ ,
IList 
< 
PropertyInfo 
> 
props  %
=& '
new( +
List, 0
<0 1
PropertyInfo1 =
>= >
(> ?
myType? E
.E F
GetPropertiesF S
(S T
)T U
)U V
;V W
foreach   
(   
PropertyInfo   !
prop  " &
in  ' )
props  * /
)  / 0
{!! 
object"" 
	propValue""  
=""! "
prop""# '
.""' (
GetValue""( 0
(""0 1
request""1 8
,""8 9
null"": >
)""> ?
;""? @
activity## 
?## 
.## 
AddTag##  
(##  !
prop##! %
.##% &
Name##& *
,##* +
	propValue##, 5
)##5 6
;##6 7
}$$ 
}%% 	
var&& 
response&& 
=&& 
await&& 
next&& !
(&&! "
)&&" #
;&&# $
	histogram(( 
.(( 
Record(( 
((( 
	stopwatch(( "
.((" #
ElapsedMilliseconds((# 6
,((6 7
tag)) 
:)) 
KeyValuePair)) 
.)) 
Create)) $
<))$ %
string))% +
,))+ ,
object))- 3
?))3 4
>))4 5
())5 6
$str))6 @
,))@ A
typeof))B H
())H I
	TResponse))I R
)))R S
.))S T
Name))T X
)))X Y
)))Y Z
;))Z [
return++ 
response++ 
;++ 
},, 
}-- ˘
tC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Order.WebApi\Infrastructure\Behaviour\ValidationBehaviour.cs
	namespace 	
ShowRoom
 
. 
Order 
. 
WebApi 
.  
Infrastructure  .
.. /
	Behaviour/ 8
;8 9
public 
class 
ValidationBehaviour  
<  !
TRequest! )
,) *
	TResponse+ 4
>4 5
:6 7
IPipelineBehavior8 I
<I J
TRequestJ R
,R S
	TResponseT ]
>] ^
where_ d
TRequeste m
:n o
IRequestp x
<x y
	TResponse	y Ç
>
Ç É
{ 
private 
readonly 
IEnumerable  
<  !

IValidator! +
<+ ,
TRequest, 4
>4 5
>5 6
_validators7 B
;B C
public

 

ValidationBehaviour

 
(

 
IEnumerable

 *
<

* +

IValidator

+ 5
<

5 6
TRequest

6 >
>

> ?
>

? @

validators

A K
)

K L
{ 
_validators 
= 

validators  
;  !
} 
public 

async 
Task 
< 
	TResponse 
>  
Handle! '
(' (
TRequest( 0
request1 8
,8 9"
RequestHandlerDelegate: P
<P Q
	TResponseQ Z
>Z [
next\ `
,` a
CancellationTokenb s
cancellationToken	t Ö
)
Ö Ü
{ 
if 

( 
_validators 
. 
Any 
( 
) 
) 
{ 	
var 
context 
= 
new 
ValidationContext /
</ 0
TRequest0 8
>8 9
(9 :
request: A
)A B
;B C
var 
validationResults !
=" #
await$ )
Task* .
.. /
WhenAll/ 6
(6 7
_validators7 B
.B C
SelectC I
(I J
vJ K
=>L N
vO P
.P Q
ValidateAsyncQ ^
(^ _
context_ f
,f g
cancellationTokenh y
)y z
)z {
){ |
;| }
var 
failures 
= 
validationResults ,
., -

SelectMany- 7
(7 8
r8 9
=>: <
r= >
.> ?
Errors? E
)E F
.F G
WhereG L
(L M
fM N
=>O Q
fR S
!=T V
nullW [
)[ \
.\ ]
ToList] c
(c d
)d e
;e f
if 
( 
failures 
. 
Count 
!= !
$num" #
)# $
throw 
new 
ValidationException -
(- .
failures. 6
)6 7
;7 8
} 	
return 
await 
next 
( 
) 
; 
} 
} Í;
zC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Order.WebApi\Infrastructure\Consumers\GetCustomerOrdersConsumer.cs
	namespace 	
ShowRoom
 
. 
Order 
. 
WebApi 
.  
Infrastructure  .
.. /
	Consumers/ 8
{ 
public 

class %
GetCustomerOrdersConsumer *
:+ ,
	IConsumer- 6
<6 7!
CustomerOrdersRequest7 L
>L M
{ 
public 
readonly 
ILogger 
<  %
GetCustomerOrdersConsumer  9
>9 :
logger; A
;A B
public %
GetCustomerOrdersConsumer (
( 
ILogger 
< %
GetCustomerOrdersConsumer 1
>1 2
logger3 9
) 
{ 	
this 
. 
logger 
= 
logger  
;  !
} 	
public 
async 
Task 
Consume !
(! "
ConsumeContext" 0
<0 1!
CustomerOrdersRequest1 F
>F G
contextH O
)O P
{ 	
Guard 
. 
Against 
. 
Null 
( 
context &
,& '
nameof( .
(. /
context/ 6
)6 7
)7 8
;8 9
Guard 
. 
Against 
. 
Null 
( 
context &
.& '
Message' .
,. /
nameof0 6
(6 7
context7 >
.> ?
Message? F
)F G
)G H
;H I
var 
activityConsumer  
=! "
nameof# )
() *!
CustomerOrdersRequest* ?
)? @
;@ A
var 
meter 
= 
new 
Meter !
(! "
Instrumentation" 1
.1 2
	MeterName2 ;
); <
;< =
var   
counter   
=   
meter   
.    
CreateCounter    -
<  - .
int  . 1
>  1 2
(  2 3
$str  3 E
)  E F
;  F G
var!! 
	histogram!! 
=!! 
meter!! !
.!!! "
CreateHistogram!!" 1
<!!1 2
float!!2 7
>!!7 8
(!!8 9
$str!!9 K
,!!K L
unit!!M Q
:!!Q R
$str!!S W
)!!W X
;!!X Y
meter"" 
."" !
CreateObservableGauge"" '
(""' (
$str""( 5
,""5 6
(""7 8
)""8 9
=>"": <
new""= @
[""@ A
]""A B
{""C D
new""E H
Measurement""I T
<""T U
int""U X
>""X Y
(""Y Z

ThreadPool""Z d
.""d e
ThreadCount""e p
)""p q
}""r s
)""s t
;""t u
counter$$ 
.$$ 
Add$$ 
($$ 
$num$$ 
,$$ 
KeyValuePair$$ '
.$$' (
Create$$( .
<$$. /
string$$/ 5
,$$5 6
object$$7 =
?$$= >
>$$> ?
($$? @
$str$$@ F
,$$F G
nameof$$H N
($$N O!
CustomerOrdersRequest$$O d
)$$d e
)$$e f
)$$f g
;$$g h
logger%% 
.%% 
LogInformation%% !
(%%! "
$str%%" Y
,%%Y Z
nameof%%[ a
(%%a b!
CustomerOrdersRequest%%b w
)%%w x
,%%x y
context	%%z Å
.
%%Å Ç
Message
%%Ç â
?
%%â ä
.
%%ä ã

CustomerId
%%ã ï
)
%%ï ñ
;
%%ñ ó!
CustomerOrdersRequest'' !
?''! "
request''# *
=''+ ,
context''- 4
.''4 5
Message''5 <
;''< =
List(( 
<(( 
Shared(( 
.(( 
Models(( 
.(( 
Order(( $
>(($ %
customerOrders((& 4
=((5 6
new((7 :
(((: ;
)((; <
;((< =
var** 
	stopwatch** 
=** 
	Stopwatch** %
.**% &
StartNew**& .
(**. /
)**/ 0
;**0 1
using,, 
(,, 
Activity,, 
activity,, $
=,,% &
ActivityHelper,,' 5
.,,5 6
Source,,6 <
.,,< =
StartActivity,,= J
(,,J K
activityConsumer,,K [
,,,[ \
ActivityKind,,] i
.,,i j
Server,,j p
),,p q
),,q r
{-- 
activity.. 
?.. 
... 
AddTag..  
(..  !
$str..! (
,..( )
nameof..* 0
(..0 1!
CustomerOrdersRequest..1 F
)..F G
)..G H
;..H I
activity// 
?// 
.// 

AddBaggage// $
(//$ %
$str//% .
,//. /
nameof//0 6
(//6 7!
CustomerOrdersRequest//7 L
)//L M
)//M N
;//N O
customerOrders11 
=11  
OrderFactory11! -
.11- .
GenerateManyOrders11. @
(11@ A
)11A B
;11B C
}22 
	histogram44 
.44 
Record44 
(44 
	stopwatch44 &
.44& '
ElapsedMilliseconds44' :
,44: ;
tag55 
:55 
KeyValuePair55 !
.55! "
Create55" (
<55( )
string55) /
,55/ 0
object551 7
?557 8
>558 9
(559 :
$str55: D
,55D E
nameof55F L
(55L M!
CustomerOrdersRequest55M b
)55b c
)55c d
)55d e
;55e f
if88 
(88 
customerOrders88 
==88 !
null88" &
||88' )
!88* +
customerOrders88+ 9
.889 :
Any88: =
(88= >
)88> ?
)88? @
{99 
logger:: 
.:: 
LogInformation:: %
(::% &
$str::& l
,::l m
request::n u
.::u v

CustomerId	::v Ä
)
::Ä Å
;
::Å Ç
await;; 
context;; 
.;; 
RespondAsync;; *
<;;* +*
CustomerOrdersNotFoundResponse;;+ I
>;;I J
(;;J K
new;;K N
{<< 
}== 
)== 
.== 
ConfigureAwait== !
(==! "
false==" '
)==' (
;==( )
}>> 
else?? 
{@@ 
loggerAA 
.AA 
LogInformationAA %
(AA% &
$strAA& |
,AA| }
customerOrders	AA~ å
.
AAå ç
Count
AAç í
,
AAí ì
request
AAî õ
.
AAõ ú

CustomerId
AAú ¶
)
AA¶ ß
;
AAß ®
awaitBB 
contextBB 
.BB 
RespondAsyncBB *
<BB* +"
CustomerOrdersResponseBB+ A
>BBA B
(BBB C
newBBC F
{CC 
ordersDD 
=DD 
customerOrdersDD +
,DD+ ,
}EE 
)EE 
.EE 
ConfigureAwaitEE !
(EE! "
falseEE" '
)EE' (
;EE( )
}FF 
}GG 	
}HH 
}II Û
tC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Order.WebApi\Infrastructure\Observability\Instrumentation.cs
	namespace 	
ShowRoom
 
. 
Order 
. 
WebApi 
.  
Infrastructure  .
.. /
Observability/ <
;< =
public 
class 
Instrumentation 
: 
IDisposable *
{ 
internal 
const 
string 
ActivitySourceName ,
=- .
$str/ F
;F G
internal 
const 
string 
	MeterName #
=$ %
$str& =
;= >
private 
readonly 
Meter 
meter  
;  !
public 

Instrumentation 
( 
) 
{ 
string 
? 
version 
= 
typeof  
(  !
Instrumentation! 0
)0 1
.1 2
Assembly2 :
.: ;
GetName; B
(B C
)C D
.D E
VersionE L
?L M
.M N
ToStringN V
(V W
)W X
;X Y
ActivitySource 
= 
new 
ActivitySource +
(+ ,
ActivitySourceName, >
,> ?
version@ G
)G H
;H I
meter 
= 
new 
Meter 
( 
	MeterName #
,# $
version% ,
), -
;- .
} 
public 

ActivitySource 
ActivitySource (
{) *
get+ .
;. /
}0 1
public 

void 
Dispose 
( 
) 
{ 
ActivitySource 
. 
Dispose 
( 
)  
;  !
meter 
. 
Dispose 
( 
) 
; 
GC 

.
 
SuppressFinalize 
( 
this  
)  !
;! "
} 
}   ∫
ÇC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Order.WebApi\Infrastructure\ServicesSetup\MassTransitRabbitMqExtensions.cs
	namespace 	
ShowRoom
 
. 
Order 
. 
WebApi 
.  
Infrastructure  .
.. /
ServicesSetup/ <
;< =
public 
static 
class )
MassTransitRabbitMqExtensions 1
{ 
public 

static 
void 
AddMTRabbitMqBroker *
(* +
this+ /
IServiceCollection0 B
servicesC K
,K L 
ConfigurationManagerM a
configurationb o
)o p
{ 
services 
. 
AddMassTransit 
(  
m  !
=>" $
{ 	
m 
. -
!SetKebabCaseEndpointNameFormatter /
(/ 0
)0 1
;1 2
m 
. 
AddRequestClient 
< 
IHealthCheckRequest 2
>2 3
(3 4
)4 5
;5 6
m 
. 
AddRequestClient 
< !
CustomerOrdersRequest 4
>4 5
(5 6
)6 7
;7 8
m 
. 
AddConsumer 
< 
HealthCheckConsumer -
>- .
(. /
)/ 0
;0 1
m 
. 
AddConsumer 
< %
GetCustomerOrdersConsumer 3
>3 4
(4 5
)5 6
;6 7
} 	
)	 

;
 
services 
. "
AddMassTransitRabbitMq '
(' (
configuration( 5
,5 6
(7 8
provider8 @
,@ A
cfgB E
)E F
=>G I
{ 	
cfg 
. 
ConfigureEndpoint !
(! "
provider" *
,* +
nameof, 2
(2 3
IHealthCheckRequest3 F
)F G
,G H
( 
cfgEndpoint 
, 
provider &
)& '
=>( *
cfgEndpoint+ 6
.6 7
Consumer7 ?
<? @
HealthCheckConsumer@ S
>S T
(T U
providerU ]
)] ^
)^ _
;_ `
cfg 
. 
ConfigureEndpoint !
(! "
provider" *
,* +
nameof, 2
(2 3!
CustomerOrdersRequest3 H
)H I
,I J
( 
cfgEndpoint 
, 
provider &
)& '
=>( *
cfgEndpoint+ 6
.6 7
Consumer7 ?
<? @%
GetCustomerOrdersConsumer@ Y
>Y Z
(Z [
provider[ c
)c d
)d e
;e f
cfg   
.   
Send   
<   "
CustomerOrdersResponse   +
>  + ,
(  , -
x  - .
=>  / 1
{!! 
x"" 
."" 
UseCorrelationId"" "
(""" #
context""# *
=>""+ -
context"". 5
.""5 6
CorrelationId""6 C
)""C D
;""D E
}## 
)## 
;## 
}$$ 	
)$$	 

;$$
 
}%% 
}&& ßk
OC:\Users\OlivierMal√©a\Documents\code\showroom\ShowRoom.Order.WebApi\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
var 
env 
= 	
builder
 
. 
Environment 
; 
var 
serviceName 
= 
env 
. 
ApplicationName %
;% &
Action## 
<## 
ResourceBuilder## 
>## 
configureResource## )
=##* +
r##, -
=>##. 0
r##1 2
.##2 3

AddService##3 =
(##= >
serviceName%% 
:%% 
serviceName%% 
,%% 
serviceVersion&& 
:&& 
typeof&& 
(&& 
Program&& "
)&&" #
.&&# $
Assembly&&$ ,
.&&, -
GetName&&- 4
(&&4 5
)&&5 6
.&&6 7
Version&&7 >
?&&> ?
.&&? @
ToString&&@ H
(&&H I
)&&I J
??&&K M
$str&&N W
,&&W X
serviceInstanceId'' 
:'' 
Environment'' "
.''" #
MachineName''# .
)''. /
;''/ 0
builder++ 
.++ 
Services++ 
.++ 
AddSingleton++ 
<++ 
Instrumentation++ -
>++- .
(++. /
)++/ 0
;++0 1
builder-- 
.-- 
Services-- 
.-- 
AddOpenTelemetry-- !
(--! "
)--" #
... 
ConfigureResource.. 
(.. 
configureResource.. (
)..( )
.// 
WithTracing// 
(// 
traceBuilder// 
=>//  
{00 
traceBuilder22 
.33 
	AddSource33 
(33 
Instrumentation33 &
.33& '
ActivitySourceName33' 9
)339 :
.44 
	AddSource44 
(44 
DiagnosticHeaders44 (
.44( )
DefaultListenerName44) <
)44< =
.55 
SetResourceBuilder55 
(55  
ResourceBuilder55  /
.55/ 0
CreateDefault550 =
(55= >
)55> ?
.55? @

AddService55@ J
(55J K
serviceName55K V
)55V W
)55W X
.66 

SetSampler66 
(66 
new66 
AlwaysOnSampler66 +
(66+ ,
)66, -
)66- .
.77 (
AddHttpClientInstrumentation77 )
(77) *
)77* +
.88 (
AddAspNetCoreInstrumentation88 )
(88) *
)88* +
.:: 
AddConsoleExporter:: 
(::  
)::  !
;::! "
traceBuilder<< 
.<< 
AddOtlpExporter<< $
(<<$ %
otlpOptions<<% 0
=><<1 3
{== 	
otlpOptions?? 
.?? 
Endpoint??  
=??! "
new??# &
Uri??' *
(??* +
builder??+ 2
.??2 3
Configuration??3 @
.??@ A
GetValue??A I
<??I J
string??J P
>??P Q
(??Q R
$str??R a
)??a b
)??b c
;??c d
}@@ 	
)@@	 

;@@
 
}AA 
)AA 
.BB 
WithMetricsBB 
(BB 
metricBuilderBB 
=>BB !
{CC 
metricBuilderDD 
.EE 
AddMeterEE 
(EE 
InstrumentationEE %
.EE% &
	MeterNameEE& /
)EE/ 0
.FF 
AddMeterFF 
(FF "
InstrumentationOptionsFF ,
.FF, -
	MeterNameFF- 6
)FF6 7
.GG (
AddHttpClientInstrumentationGG )
(GG) *
)GG* +
.HH (
AddAspNetCoreInstrumentationHH )
(HH) *
)HH* +
;HH+ ,
metricBuilderJJ 
.JJ 
AddOtlpExporterJJ %
(JJ% &
otlpOptionsJJ& 1
=>JJ2 4
{KK 	
otlpOptionsMM 
.MM 
EndpointMM  
=MM! "
newMM# &
UriMM' *
(MM* +
builderMM+ 2
.MM2 3
ConfigurationMM3 @
.MM@ A
GetValueMMA I
<MMI J
stringMMJ P
>MMP Q
(MMQ R
$strMMR a
)MMa b
)MMb c
;MMc d
}NN 	
)NN	 

;NN
 
}OO 
)OO 
;OO 
LogRR 
.RR 
LoggerRR 

=RR "
CreateSerilogAppLoggerRR #
(RR# $
)RR$ %
;RR% &
LogSS 
.SS 
InformationSS 
(SS 
$strSS 
)SS 
;SS 
LogTT 
.TT 
InformationTT 
(TT 
$"TT 
$strTT 
{TT 
serviceNameTT (
}TT( )
$strTT) -
"TT- .
)TT. /
;TT/ 0
builderUU 
.UU 
HostUU 
.UU 

UseSerilogUU 
(UU 
)UU 
;UU 
varXX 
configurationXX 
=XX 
builderXX 
.XX 
ConfigurationXX )
;XX) *
configurationYY 
.YY 
SetBasePathYY 
(YY 
envYY 
.YY 
ContentRootPathYY -
)YY- .
;YY. /
configurationZZ 
.ZZ 
AddJsonFileZZ 
(ZZ 
$strZZ ,
,ZZ, -
falseZZ. 3
,ZZ3 4
trueZZ5 9
)ZZ9 :
;ZZ: ;
configuration^^ 
.^^ #
AddEnvironmentVariables^^ %
(^^% &
)^^& '
;^^' (
builder__ 
.__ 
Services__ 
.__ 
AddHealthChecks__  
(__  !
)__! "
;__" #
builder`` 
.`` 
Services`` 
.`` #
AddEndpointsApiExplorer`` (
(``( )
)``) *
;``* +
builderaa 
.aa 
Servicesaa 
.aa 

AddMediatRaa 
(aa 
cfgaa 
=>aa  "
cfgaa# &
.aa& '(
RegisterServicesFromAssemblyaa' C
(aaC D
typeofaaD J
(aaJ K
ProgramaaK R
)aaR S
.aaS T
AssemblyaaT \
)aa\ ]
)aa] ^
.bb 
	AddScopedbb 
(bb 
typeofbb 
(bb 
IPipelineBehaviorbb '
<bb' (
,bb( )
>bb) *
)bb* +
,bb+ ,
typeofbb- 3
(bb3 4
LoggingBehaviourbb4 D
<bbD E
,bbE F
>bbF G
)bbG H
)bbH I
.cc 
	AddScopedcc 
(cc 
typeofcc 
(cc 
IPipelineBehaviorcc '
<cc' (
,cc( )
>cc) *
)cc* +
,cc+ ,
typeofcc- 3
(cc3 4"
ObservabilityBehaviourcc4 J
<ccJ K
,ccK L
>ccL M
)ccM N
)ccN O
.dd 
	AddScopeddd 
(dd 
typeofdd 
(dd 
IPipelineBehaviordd '
<dd' (
,dd( )
>dd) *
)dd* +
,dd+ ,
typeofdd- 3
(dd3 4
ValidationBehaviourdd4 G
<ddG H
,ddH I
>ddI J
)ddJ K
)ddK L
;ddL M
builderee 
.ee 
Servicesee 
.ee 
AddMTRabbitMqBrokeree $
(ee$ %
configurationee% 2
)ee2 3
;ee3 4
builderff 
.ff 
Servicesff 
.ff 
AddSwaggerGenff 
(ff 
)ff  
;ff  !
buildergg 
.gg 
Servicesgg 
.gg %
AddValidatorsFromAssemblygg *
(gg* +
typeofgg+ 1
(gg1 2
Programgg2 9
)gg9 :
.gg: ;
Assemblygg; C
)ggC D
;ggD E
builderhh 
.hh 
Serviceshh 
.hh 
	AddCarterhh 
(hh 
)hh 
;hh 
builderii 
.ii 
Servicesii 
.ii 
AddProblemDetailsii "
(ii" #
oii# $
=>ii% '
oii( )
.ii) *#
CustomizeProblemDetailsii* A
=iiB C
ctxiiD G
=>iiH J
{jj 
varkk  
problemCorrelationIdkk 
=kk 
Guidkk #
.kk# $
NewGuidkk$ +
(kk+ ,
)kk, -
.kk- .
ToStringkk. 6
(kk6 7
)kk7 8
;kk8 9
ctxll 
.ll 
ProblemDetailsll 
.ll 
Instancell 
=ll  ! 
problemCorrelationIdll" 6
;ll6 7
}mm 
)mm 
;mm 
varoo 
appoo 
=oo 	
builderoo
 
.oo 
Buildoo 
(oo 
)oo 
;oo 
ifrr 
(rr 
apprr 
.rr 
Environmentrr 
.rr 
IsDevelopmentrr !
(rr! "
)rr" #
)rr# $
{ss 
apptt 
.tt 

UseSwaggertt 
(tt 
)tt 
;tt 
appuu 
.uu 
UseSwaggerUIuu 
(uu 
)uu 
;uu 
}vv 
appxx 
.xx 
UseHttpsRedirectionxx 
(xx 
)xx 
;xx 
appyy 
.yy 
	MapCarteryy 
(yy 
)yy 
;yy 
appzz 
.zz 
MapHealthCheckszz 
(zz 
$strzz 
)zz 
;zz 
app|| 
.|| 
Run|| 
(|| 
)|| 	
;||	 

staticÇÇ 
Serilog
ÇÇ 
.
ÇÇ 
ILogger
ÇÇ $
CreateSerilogAppLogger
ÇÇ -
(
ÇÇ- .
)
ÇÇO P
{ÉÉ 
var
ÑÑ 
outputTemplate
ÑÑ 
=
ÑÑ 
$str
ÑÑ t
;
ÑÑt u
return
ÜÜ 

new
ÜÜ !
LoggerConfiguration
ÜÜ "
(
ÜÜ" #
)
ÜÜ# $
.
áá 	
MinimumLevel
áá	 
.
áá 
Debug
áá 
(
áá 
)
áá 
.
àà 	
MinimumLevel
àà	 
.
àà 
Override
àà 
(
àà 
$str
àà *
,
àà* +
LogEventLevel
àà, 9
.
àà9 :
Information
àà: E
)
ààE F
.
ââ 	
MinimumLevel
ââ	 
.
ââ 
Override
ââ 
(
ââ 
$str
ââ 5
,
ââ5 6
LogEventLevel
ââ7 D
.
ââD E
Warning
ââE L
)
ââL M
.
ãã 	
MinimumLevel
ãã	 
.
ãã 
Override
ãã 
(
ãã 
$str
ãã '
,
ãã' (
LogEventLevel
ãã) 6
.
ãã6 7
Warning
ãã7 >
)
ãã> ?
.
åå 	
MinimumLevel
åå	 
.
åå 
Override
åå 
(
åå 
$str
åå ;
,
åå; <
LogEventLevel
åå= J
.
ååJ K
Warning
ååK R
)
ååR S
.
çç 	
Enrich
çç	 
.
çç 
FromLogContext
çç 
(
çç 
)
çç  
.
éé 	
WriteTo
éé	 
.
éé 
Console
éé 
(
éé 
outputTemplate
éé '
:
éé' (
outputTemplate
éé) 7
)
éé7 8
.
èè 	
WriteTo
èè	 
.
èè 
File
èè 
(
èè 
$"
êê 
$str
êê 
{
êê 
DateTime
êê  
.
êê  !
Now
êê! $
:
êê$ %
$str
êê% /
}
êê/ 0
$str
êê0 4
"
êê4 5
,
êê5 6
outputTemplate
ëë 
:
ëë 
outputTemplate
ëë *
,
ëë* + 
fileSizeLimitBytes
íí 
:
íí 
default
íí  '
,
íí' (!
rollOnFileSizeLimit
ìì 
:
ìì  
true
ìì! %
)
ìì% &
.
îî 	
WriteTo
îî	 
.
îî 
OpenTelemetry
îî 
(
îî 
options
îî &
=>
îî' )
{
ïï 	
options
òò 
.
òò 
Endpoint
òò 
=
òò 
new
òò "
Uri
òò# &
(
òò& '
$str
òò' K
)
òòK L
.
òòL M
ToString
òòM U
(
òòU V
)
òòV W
;
òòW X
options
ôô 
.
ôô 
Protocol
ôô 
=
ôô 
OtlpProtocol
ôô +
.
ôô+ ,
HttpProtobuf
ôô, 8
;
ôô8 9
options
öö 
.
öö 
IncludedData
öö  
=
öö! "
IncludedData
öö# /
.
öö/ 0*
MessageTemplateTextAttribute
öö0 L
|
ööM N
IncludedData
õõ &
.
õõ& '
TraceIdField
õõ' 3
|
õõ4 5
IncludedData
õõ6 B
.
õõB C
SpanIdField
õõC N
;
õõN O
}
úú 	
)
úú	 

.
ùù 	#
CreateBootstrapLogger
ùù	 
(
ùù 
)
ùù  
;
ùù  !
}ûû 
[†† %
ExcludeFromCodeCoverage
†† 
]
†† 
public°° 
partial
°° 
class
°° 
Program
°° 
{¢¢ 
	protected
££ 
Program
££ 
(
££ 
)
££ 
{
££ 
}
££ 
}§§ 